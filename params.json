{"name":"Seminaire","tagline":"Depot fait pour le cours de seminaire 420-650","body":"### CAL-420-650-SÉMINAIRES.\r\nVoici la page du seminaire sur Git & Github présenté par Michel Pelland dans le cadre du cours 420-650-SÉMINAIRES.\r\n\r\n```\r\n$ cd username/Seminaire\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nSi vous utilisez GitHub sur Mac OS, vous pouvez simplement syncroniser votre répertoire et vous verrez la nouvelle branche.\r\n\r\n### Template du site\r\nLe template utilisé est généré par GitHub, il est possible d'éditer tout le texte affiché sur la page du répertoire en quelques cliques. De plus une fois la page publié, il est possible de revenir sur la page du générateur et de modifier le thème. Le contenu de la page ne sera pas modifié lors de cette étape.\r\n\r\n### Personalisation\r\nOn peu aussi ne pas utiliser le générateur de pages, il suffie de pousser une page nommée `gh-pages` dans le repertoire pour créer une page manuellement. Aussi, en plus de supporter le html normal, les pages GitHub supportent\r\n\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}